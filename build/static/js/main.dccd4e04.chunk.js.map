{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","App.module.css","components/Section/Section.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/Section/Section.js","components/ContactsList/ContactsList.js","redux/filter/filter-selectors.js","redux/filter/filter-actions.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","deleteContact","getContactsList","state","contacts","items","getFilteredContacts","normalizedFilter","filter","toLocaleLowerCase","contact","name","includes","Form","onSubmit","useState","setName","number","setNumber","id","setId","dispatch","useDispatch","contactsList","useSelector","handleChange","event","currentTarget","value","shortid","generate","resetForm","addContacts","some","toLowerCase","alert","className","s","form__container","preventDefault","label","name__input","input","type","pattern","title","required","onChange","add__btn","Section","children","container","ContactsList","list","map","item","deleteBtn","onClick","getFilterValue","changeFilter","Filter","target","App","title_contacts","createReducer","payload","_","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","rootReducer","combineReducers","contactsReducer","filterReducer","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.dccd4e04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__2osA-\",\"deleteBtn\":\"ContactsList_deleteBtn__3YUrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1u7YI\",\"input\":\"Filter_input__EKz1c\",\"title\":\"Filter_title__2iZ5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__11eqj\",\"title\":\"App_title__1zNX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__iIlHj\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\n\nexport const deleteContact = createAction('contacts/delete');\n","export const getContactsList = state => state.contacts.items;\n\nexport const getFilteredContacts = state => {\n  const normalizedFilter = state.contacts.filter.toLocaleLowerCase();\n\n  return state.contacts.items.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport shortid from 'shortid';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { getContactsList } from '../../redux/contacts/contacts-selectors';\nimport s from './Form.module.css';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n\n  const dispatch = useDispatch();\n  const contactsList = useSelector(getContactsList);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setId(shortid.generate());\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addContacts({ id, name, number });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n    setId('');\n  };\n\n  const addContacts = ({ id, name, number }) => {\n    contactsList.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    )\n      ? alert(`${name} is already in contacts.`)\n      : dispatch(addContact({ id, name, number }));\n  };\n\n  return (\n    <form className={s.form__container} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <span className={s.name__input}>Name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире\n          и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de\n          Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        <span className={s.name__input}>Number</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.add__btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          {name}: {number}\n          <button\n            className={s.deleteBtn}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","export const getFilterValue = state => state.contacts.filter;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValue } from '../../redux/filter/filter-selectors';\nimport { changeFilter } from '../../redux/filter/filter-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilterValue);\n  return (\n    <label className={s.label}>\n      <span className={s.title}>Find contacts by name</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={({ target }) => dispatch(changeFilter(target.value))}\n      />\n    </label>\n  );\n}\n","import Form from './components/Form';\nimport Section from './components/Section';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport s from './App.module.css';\n\n// [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\nexport default function App() {\n  // const [contacts, setContacts] = useState([]);\n  // const [filter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n  //   setContacts(parsedContacts);\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const addContact = data => {\n  //   contacts.some(\n  //     contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n  //   )\n  //     ? alert(`${data.name} is already in contacts.`)\n  //     : setContacts(prevState => [...prevState, data]);\n  // };\n\n  // const changeFilter = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const getFilteredContact = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n\n  // const deleteContact = contactId => {\n  //   setContacts(prevState =>\n  //     prevState.filter(contact => contact.id !== contactId),\n  //   );\n  // };\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <Section>\n        <Form />\n      </Section>\n      <h2 className={s.title_contacts}>Contacts</h2>\n      <Section>\n        <Filter />\n        <ContactsList />\n      </Section>\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default items;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './filter-actions';\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport filterReducer from './filter/filter-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  items: contactsReducer,\n  filter: filterReducer,\n});\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, rootReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__container\":\"Form_form__container__q-NUR\",\"label\":\"Form_label__bXZOk\",\"input\":\"Form_input__2ao95\",\"add__btn\":\"Form_add__btn__2Unxk\",\"name__input\":\"Form_name__input__31jbP\"};"],"sourceRoot":""}